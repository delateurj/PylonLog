<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PylonLog.Core"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" x:Name="MainWindow1" x:Class="PylonLog.Core.MainWindow"
        mc:Ignorable="d"
        Title="Pylon Log" SizeToContent="WidthAndHeight" Loaded="MainWindow1_Loaded" WindowStartupLocation="Manual">

    <Window.Resources>
        <CollectionViewSource x:Key="pylonLogEntryViewSource" d:DesignSource="{d:DesignInstance {x:Type local:PylonLogEntry}, CreateList=True}" />
        <CollectionViewSource x:Key="pylonLogEntryDataBlocksViewSource" Source="{Binding DataBlocks, Source={StaticResource pylonLogEntryViewSource}}"/>
    </Window.Resources>

    <DockPanel x:Name="dckPnlMain" LastChildFill="True">
        <StackPanel x:Name="stckPnlStatus" Background="LightGray" DockPanel.Dock="Bottom" Orientation="Horizontal">
            <TextBlock x:Name = "txtBxStatus" Text="Status:" />
        </StackPanel>

        <Menu x:Name="menuMain" DockPanel.Dock="Top" Height="20">
            <MenuItem x:Name ="menuRelatedData" Header="Related Data" Click="menuRelatedData_Click"></MenuItem>
            <MenuItem Header="Help"></MenuItem>
        </Menu>

        <Grid Margin="10,10,10,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition  Width="Auto" />
                <ColumnDefinition Width="110"/>
                <ColumnDefinition Width="*"/>

            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Column="0" Margin="0,0,20,0">
                <Label Content="Sessions in Spetrum File" VerticalAlignment= "Bottom" />
                <CheckBox x:Name="chkBoxNonZeroRPM" FlowDirection="RightToLeft" Content="Show Zero RPM Sessions" Click="chkBoxNonZeroRPM_Click" />
                <Button x:Name="btnOpenSpektrumLog"  Height="30" VerticalAlignment="Top" 
                        Content="Open Spektrum File" Click="openLogToInspectButton_Click"/>
                <ListBox x:Name="lstBxLogSessions" VerticalAlignment="Top" Width="Auto" 
                         SelectionChanged="logSessionsListBox_SelectionChanged" MinHeight="100" MaxHeight="200"/>
            </StackPanel>

            <Button x:Name="btnOpenCreateLogEntry" Grid.Column="1"  Height="30" VerticalAlignment="Center" 
                        Content=">> Create Log >>" Click="btnOpenCreateLogEntry_Click" />


            <StackPanel Grid.Column="2" Margin="20,0,8,0">
                <Label Content="Log Entries" VerticalAlignment= "Bottom" />

                <DataGrid x:Name="dgPylonLog"   AutoGenerateColumns="False" MaxHeight="200"
                               DataContext="{StaticResource pylonLogEntryViewSource}" ItemsSource="{Binding}"  >
                    <DataGrid.Columns>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Click="Button_Click">Graph</Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        
                        <DataGridTextColumn x:Name="txtGridPlaneName"  Header="Plane" Binding="{Binding planeName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" />

                        <DataGridTemplateColumn Header="Date/Time">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <xctk:DateTimePicker x:Name="dateTimePickerEntryDateTime" MinWidth="120"
                                                             Format="Custom"
                                                             FormatString=" M'/'dd'/'yy hh':'mm tt"
                                         Value="{Binding entryDateTime, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="Engine" MinWidth="60">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ComboBox x:Name="dgCmboEngine" 
                                            ItemsSource = "{Binding Source={StaticResource engineViewSource}}"
                                            DisplayMemberPath="serialNumber"
                                            SelectedValuePath="serialNumber"
                                            SelectedValue="{Binding engine, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,NotifyOnValidationError =true, ValidatesOnExceptions=true}"
                                            IsSynchronizedWithCurrentItem="false" SelectionChanged="dgCmboEngine_SelectionChanged"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn x:Name="txtHeadHeight"  Header="Hd" MaxWidth="30"
                                              Binding="{Binding headHeight, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"  />

                        <DataGridTextColumn x:Name="txtDeckClearance"  Header="Dck" 
                                                Binding="{Binding deckClearance, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"  />

                        <DataGridTextColumn x:Name="txtTiming"  Header="Tmng" 
                                                Binding="{Binding timing, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"  />


                        <DataGridTemplateColumn Header="Prop" MinWidth="60">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ComboBox x:Name="dgCmboProp" 
                                            ItemsSource = "{Binding Source={StaticResource propViewSource}}"
                                            SelectedValue="{Binding prop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,NotifyOnValidationError =true, ValidatesOnExceptions=true}"
                                            DisplayMemberPath="name" 
                                            IsSynchronizedWithCurrentItem="false"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="Plug">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ComboBox x:Name="dgCmboPlugType" MinWidth="60"
                                            ItemsSource = "{Binding Source={StaticResource plugViewSource}}"
                                            SelectedValue="{Binding plugType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,NotifyOnValidationError =true, ValidatesOnExceptions=true}"
                                            DisplayMemberPath="name" 
                                            IsSynchronizedWithCurrentItem="false"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridCheckBoxColumn x:Name="chkBxGridNewPlug" Header="New&#x0a;Plug?" Binding="{Binding newPlug, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"  />

                        <DataGridTextColumn x:Name="txtGridPlugColor"  Header="Color&#x0a;(0-5)" Binding="{Binding plugColor, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"  />

                        <DataGridTextColumn x:Name="txtGridEntryType"  Header="Entry Type" Binding="{Binding entryType, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"  />


                        <DataGridTextColumn x:Name="txtGridNeedle" MaxWidth="40" Header="Ndle" Binding="{Binding relativeNeedle, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"  />

                        <DataGridTextColumn x:Name="txtGridTemperature"  Header="Tmp" 
                                                Binding="{Binding temperature, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"  />

                        <DataGridTextColumn x:Name="txtGridHumidity"  Header="Hum&#x0a;idity" MaxWidth="30"
                                                Binding="{Binding humidity, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"  />

                        <DataGridTextColumn x:Name="txtPeakLineRPM"  Header="Peak&#x0a;Line&#x0a;RPM" 
                                                Binding="{Binding peakRPMOnLine, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"  />

                        <DataGridTextColumn x:Name="txtLaunchRPM"  Header="Launch&#x0a;RPM" 
                                                Binding="{Binding launchRPM, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"  />

                        <DataGridTextColumn x:Name="txtLaunchTime"  Header="Launch&#x0a;Time&#x0a;(secs.)" 
                                                Binding="{Binding launchTimeStamp, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"  />

                        <DataGridTextColumn x:Name="txtEndTime"  Header="End&#x0a;Time&#x0a;(secs.)" 
                                                Binding="{Binding endTimeStamp, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"  />

                        <DataGridTextColumn x:Name="txtAvgRPM"  Header="Avg&#x0a;RPM" 
                                                Binding="{Binding avgRPM, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"  />

                        <DataGridTextColumn x:Name="txtAvgPeakRPM"  Header="Avg. Peak&#x0a;RPM" 
                                                Binding="{Binding avgPeakRPM, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"  />

                        <DataGridCheckBoxColumn x:Name="chkBxGridExclude" Header="Excl.&#x0a;From&#x0a;Stats" 
                                                    Binding="{Binding excludeFromStats, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"  />

                        <DataGridTextColumn x:Name="txtGridNotes"  Header="Notes" MinWidth="150" 
                                                Binding="{Binding notes, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox">
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                    <Setter Property="AcceptsReturn" Value="true" />
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>

                    </DataGrid.Columns>
                </DataGrid>
                <StackPanel Orientation="Horizontal">
                    <Button x:Name="btnSaveDataGrid" Content="Save" Margin="0,10,0,0" MaxWidth="150" Click="btnSaveDataGrid_Click"/>
                    <Button x:Name="btnUpdateAvgRPM" Content="Calc. Avg. RPM of Selected Entry" Margin="10,10,0,0" MaxWidth="250" Click="btnUpdateAvgRPM_Click"/>
                </StackPanel>

            </StackPanel>
        </Grid>
    </DockPanel>
</Window>
